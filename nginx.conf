events {
    worker_connections 1024;
}

http {
    # Rate limiting configuration
    # Create a zone for API rate limiting - 10MB can store ~160k IP addresses
    # Increased to accommodate dashboard polling (needs ~84 req/min)
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=200r/m;
    
    # Create a zone for more lenient dashboard rate limiting
    limit_req_zone $binary_remote_addr zone=dashboard_limit:10m rate=300r/m;
    
    upstream dashboard {
        server localhost:8005;
    }
    
    upstream dashboard_api {
        server localhost:8006;
    }
    
    server {
        listen 80;
        server_name localhost;
        
        # Serve the dashboard on the root path with lenient rate limiting
        location / {
            # Allow bursts of up to 50 requests, then rate limit to 300/min
            limit_req zone=dashboard_limit burst=50 nodelay;
            
            proxy_pass http://dashboard;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Serve the API on /api path with rate limiting that accommodates dashboard needs
        location /api/ {
            # Allow bursts of up to 20 requests, then rate limit to 200/min
            # This gives plenty of headroom for dashboard polling (~84 req/min)
            limit_req zone=api_limit burst=20 nodelay;
            
            proxy_pass http://dashboard_api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
} 